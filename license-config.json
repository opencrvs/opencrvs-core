{
  "ignore": [
    "**/*.@(editorconfig|md|log|lock|patch|prettierrc|gitignore|eslintignore|stylelintrc|csv|gz|geojson|woff2|woff|xml|yarnrc|yarn-integrity|ttf|map|pdf|snap|dockerignore|jsonc|idea|env|info|key|pub|cjs|sql)",
    ".husky",
    "**/*.ipynb",
    ".git",
    ".github/DISCUSSION_TEMPLATE/Installation.yml",
    ".github/CODEOWNERS",
    ".idea",
    "**/patches",
    ".secrets",
    "deploy_key.enc",
    "license-header.txt",
    ".vscode",
    ".history",
    "data",
    "backups",
    "**/coverage",
    "packages/client/public/robots.txt",
    "packages/client/public/mockServiceWorker.js",
    "packages/login/public/robots.txt",
    ".env*",
    ".vs",
    "**/.DS_Store",
    "AUTHORS",
    "LICENSE",
    "Tiltfile",
    "license-header.txt",
    "**/*Dockerfile*",
    "**/packages/components/lib",
    "**/packages/*/build",
    "packages/gateway/src/graphql/schema.d.ts",
    "packages/gateway/src/graphql/schema.graphql",
    "packages/client/index.html",
    "packages/client/src/tests/schema.graphql",
    "packages/login/index.html",
    "packages/components/**/*.mdx",
    "packages/components/.storybook/preview.jsx",
    "packages/components/.storybook/manager-head.html",
    "grafana",
    "packages/client/storybook-static",
    "packages/client/.storybook/preview-head.html",
    "packages/scheduler/start.sh",
    "packages/scheduler/crontab",
    "packages/scheduler/jobs/*",
    ".nvmrc",
    ".idea",
    "packages/dashboards/*.jar",
    "packages/dashboards/plugins/*.jar",
    "packages/dashboards/data/metabase/*.db",
    "packages/client/dev-dist",
    "packages/toolkit/.npmignore",
    "packages/toolkit/tsconfig.tsbuildinfo",
    "packages/commons/src/events/EventConfig.mermaid",
    "packages/commons/src/events/EventUpdateFlow.mermaid",
    "packages/events/src/storage/postgres/events/schema/**/*.ts",
    "packages/events/.kanelrc.js",
    "packages/events/src/tests/extract-dump.sh"
  ],
  "license": "license-header.txt",
  "licenseFormats": {
    "sh|yml|yaml|toml|conf|txt|dotfile|graphql": {
      "eachLine": {
        "prepend": "# "
      }
    },
    "html|xml|svg|mdx": {
      "prepend": "<!--",
      "append": "-->"
    },
    "ts|tsx|js|css": {
      "prepend": "/*",
      "append": " */",
      "eachLine": {
        "prepend": " * "
      }
    },
    "ini": {
      "eachLine": {
        "prepend": "; "
      }
    }
  },
  "trailingWhitespace": "TRIM"
}
