{
  "description": "OpenCRVS core workspace",
  "license": "MPL-2.0",
  "version": "1.8.0",
  "private": true,
  "os": [
    "darwin",
    "linux"
  ],
  "engines": {
    "node": "22.x.x",
    "npm": "Please use pnpm",
    "yarn": "Please use pnpm"
  },
  "scripts": {
    "postinstall": "patch-package",
    "start": "lerna run build --scope @opencrvs/commons && lerna run build --scope @opencrvs/components && lerna run --stream --parallel --ignore @opencrvs/dashboards --ignore @opencrvs/mobile-proxy $OTHER_LERNA_FLAGS start",
    "start:prod": "pnpm build && lerna run --stream --parallel --ignore @opencrvs/components --ignore @opencrvs/dashboards --ignore @opencrvs/mobile-proxy $OTHER_LERNA_FLAGS start:prod",
    "dev": "bash development-environment/dev.sh",
    "dev:secrets:gen": "openssl genrsa -out .secrets/private-key.pem 2048 && openssl rsa -pubout -in .secrets/private-key.pem -out .secrets/public-key.pem",
    "open": "opener 'http://localhost:6060/' && opener 'http://localhost:3020/'",
    "lint": "lerna run lint",
    "test": "CI=true lerna run test --stream",
    "compose:deps:demo": "docker compose -p opencrvs -f docker-compose.deps.yml -f docker-compose.demo-deps.yml up",
    "compose:deps": "docker compose -p opencrvs -f docker-compose.deps.yml -f docker-compose.dev-deps.yml up",
    "compose:deps:detached": "docker compose -p opencrvs -f docker-compose.deps.yml -f docker-compose.dev-deps.yml up -d",
    "compose:down:deps": "docker compose -p opencrvs -f docker-compose.deps.yml -f docker-compose.dev-deps.yml down",
    "cov:client": "cd packages/client && pnpm open:cov",
    "cov:login": "cd packages/login && pnpm open:cov",
    "db:clear:all": "bash development-environment/clear-all-data.sh",
    "build": "lerna run build --stream && lerna run build-storybook",
    "build:image": "export VERSION=`git log -1 --pretty=format:%h` && docker build --build-arg VERSION=${VERSION} -t opencrvs-build . && unset VERSION",
    "build:clean": "lerna run build:clean",
    "check:license": "license-check-and-add check -f license-config.json",
    "seed:dev": "NODE_ENV=development lerna run seed --stream --scope @opencrvs/data-seeder",
    "seed:prod": "NODE_ENV=production lerna run seed --stream --scope @opencrvs/data-seeder",
    "add:license": "license-check-and-add add -f license-config.json",
    "build:components": "lerna run build --scope @opencrvs/components",
    "debug": "bash debug-service-in-chrome.sh"
  },
  "devDependencies": {
    "@types/dotenv": "^6.1.0",
    "concurrently": "^8.0.0",
    "husky": "^9.1.6",
    "lerna": "^8.0.0",
    "lint-staged": "^15.2.10",
    "prettier": "3.5.3"
  },
  "dependencies": {
    "@types/react-signature-canvas": "^1.0.2",
    "license-check-and-add": "^3.0.3",
    "opener": "^1.5.1",
    "patch-package": "^6.1.2",
    "postinstall-postinstall": "^2.0.0",
    "react-signature-canvas": "^1.0.6"
  },
  "resolutions": {
    "@types/react": "18.3.1",
    "fast-xml-parser": "4.4.1"
  }
}
