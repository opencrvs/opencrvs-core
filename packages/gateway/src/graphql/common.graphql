# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.
#
# OpenCRVS is also distributed under the terms of the Civil Registration
# & Healthcare Disclaimer located at http://opencrvs.org/license.
#
# Copyright (C) The OpenCRVS Authors located at https://github.com/opencrvs/opencrvs-core/blob/master/AUTHORS.
# automatically map from FHIR

scalar Date
scalar Map
scalar FieldValue
scalar PlainDate

input HumanNameInput {
  use: String # bn | en - the language the name text is written in
  firstNames: String
  middleName: String
  familyName: String
  marriedLastName: String
}

type HumanName { # -> HumanName
  use: String # bn | en - the language the name text is written in
  firstNames: String # -> .given[0]
  middleName: String # -> .given[1]
  familyName: String # -> .family
  marriedLastName: String # -> .suffix
}

# Although the recommended way is use ALL_CAPS but keeping it lowercase
# makes it a lot more easier to use in client
enum EventType {
  birth
  death
  marriage
}

input IdentityInput {
  id: ID
  type: String
  otherType: String
  fieldsModifiedByIdentity: [String]
}

type IdentityType { # -> Identifier
  id: ID # -> .value
  type: String # -> .system
  otherType: String
  fieldsModifiedByIdentity: [String]
}

input RelatedPersonInput {
  id: ID
  _fhirID: ID # -> .id relatedPerson ID
  _fhirIDPatient: ID # -> .id patient ID
  relationship: String
  otherRelationship: String
  affidavit: [AttachmentInput!]
  exactDateOfBirthUnknown: Boolean
  identifier: [IdentityInput]
  name: [HumanNameInput]
  telecom: [ContactPointInput]
  gender: Gender
  birthDate: String
  age: Float
  maritalStatus: String # Not in BDRIS2 - keep as optional
  occupation: String
  detailsExist: Boolean
  reasonNotApplying: String
  dateOfMarriage: Date # Not in BDRIS2
  # For order of birth 3 equals 3rd born
  multipleBirth: Int # Not in BDRIS2
  address: [AddressInput]
  photo: [AttachmentInput!]
  deceased: DeceasedInput
  nationality: [String] # In BDRIS2 for father and mother only
  educationalAttainment: String # Not in BDRIS2
  ageOfIndividualInYears: Int
}

type RelatedPerson { # -> Related Person
  id: ID
  _fhirID: ID # -> .id relatedPerson ID
  _fhirIDPatient: ID # -> .id patient ID
  relationship: String # -> .relationship.coding
  otherRelationship: String # -> .relationship.coding
  affidavit: [Attachment] # -> .extension
  identifier: [IdentityType] # -> .identifier
  name: [HumanName] # -> .name
  telecom: [ContactPoint] # -> .telecom
  gender: String # -> .gender
  birthDate: String # -> birthDate
  age: Float # -> .extension(url='http://opencrvs.org/specs/age').valueInteger
  maritalStatus: String # -> .maritalStatus
  occupation: String
  detailsExist: Boolean
  reasonNotApplying: String
  dateOfMarriage: Date # -> .extension(url='http://opencrvs.org/specs/date-of-marriage').valueDateTime
  # For order of birth 3 equals 3rd born
  multipleBirth: Int # -> .multipleBirthInteger
  address: [Address] # -> .address
  photo: [Attachment] # -> .photo
  deceased: Deceased # -> .deceased
  nationality: [String] # -> .extension https://www.hl7.org/fhir/extension-patient-nationality.html
  educationalAttainment: String # -> .extension(url='http://opencrvs.org/specs/extension/educational-attainment').valueString
  ageOfIndividualInYears: Int
  exactDateOfBirthUnknown: Boolean
}

input DeceasedInput {
  deceased: Boolean
  deathDate: PlainDate
}

type Deceased {
  deceased: Boolean
  deathDate: PlainDate
}

enum Gender {
  male
  female
  other
  unknown
}

input PersonInput {
  _fhirID: ID
  identifier: [IdentityInput]
  name: [HumanNameInput]
  telecom: [ContactPointInput]
  gender: Gender
  birthDate: PlainDate
  age: Float
  maritalStatus: String # Not in BDRIS2 - keep as optional
  occupation: String
  detailsExist: Boolean
  reasonNotApplying: String
  dateOfMarriage: PlainDate # Not in BDRIS2
  # For order of birth 3 equals 3rd born
  multipleBirth: Int # Not in BDRIS2
  address: [AddressInput]
  photo: [AttachmentInput!]
  deceased: DeceasedInput
  nationality: [String] # In BDRIS2 for father and mother only
  educationalAttainment: String # Not in BDRIS2
  ageOfIndividualInYears: Int
}

type Person { # -> Patient
  id: ID
  _fhirID: ID # -> .id
  identifier: [IdentityType] # -> .identifier
  name: [HumanName] # -> .name
  telecom: [ContactPoint] # -> .telecom
  gender: String # -> .gender
  birthDate: PlainDate # -> birthDate
  age: Float # -> .extension(url='http://opencrvs.org/specs/age').valueInteger
  maritalStatus: String # -> .maritalStatus
  occupation: String
  detailsExist: Boolean
  reasonNotApplying: String
  dateOfMarriage: PlainDate # -> .extension(url='http://opencrvs.org/specs/date-of-marriage').valueDateTime
  # For order of birth 3 equals 3rd born
  multipleBirth: Int # -> .multipleBirthInteger
  address: [Address] # -> .address
  photo: [Attachment] # -> .photo
  deceased: Deceased # -> .deceased
  nationality: [String] # -> .extension https://www.hl7.org/fhir/extension-patient-nationality.html
  educationalAttainment: String # -> .extension(url='http://opencrvs.org/specs/extension/educational-attainment').valueString
  ageOfIndividualInYears: Int
  exactDateOfBirthUnknown: Boolean
}

enum TelecomSystem {
  other
  phone
  fax
  email
  pager
  url
  sms
}
enum TelecomUse {
  home
  work
  temp
  old
  mobile
}

input ContactPointInput {
  # phone | fax | email | pager | url | sms | other
  system: TelecomSystem
  # The actual contact point details
  value: String
  # home | work | temp | old | mobile - purpose of this contact point
  use: TelecomUse
}

type ContactPoint { # -> ContactPoint
  # phone | fax | email | pager | url | sms | other
  system: String # -> .system
  # The actual contact point details
  value: String # -> .value
  # home | work | temp | old | mobile - purpose of this contact point
  use: String # -> .use
}

type Identifier {
  system: String
  value: String
}

enum AddressUse {
  home
  work
  temp
  old
}
enum AddressType {
  PRIMARY_ADDRESS
  SECONDARY_ADDRESS
  postal
  physical
  both
}

input AddressInput {
  use: AddressUse
  type: AddressType
  text: String # Reserve for geo-code
  line: [String!]
  city: String
  district: String
  state: String
  postalCode: String
  country: String
  from: Date # Not in BDRIS2 use Current/Permenant
  to: Date # Not in BDRIS2 use Current/Permenant
  partOf: String
}

type Address { # -> Address (mostly the same property name except:)
  use: String
  type: String
  text: String # Reserve for geo-code
  line: [String]
  lineName: [String]
  city: String
  district: String
  districtName: String
  state: String
  stateName: String
  postalCode: String
  country: String
  from: Date # -> .period.start
  to: Date # -> .period.end
  partOf: String
}

enum AuthorizationStatus {
  ANONYMOUS
}

directive @auth(requires: AuthorizationStatus!) on FIELD_DEFINITION
