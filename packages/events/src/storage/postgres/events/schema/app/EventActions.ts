// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import type { UUID } from '@opencrvs/commons'
import type { default as ActionType } from './ActionType'
import type { default as UserType } from './UserType'
import type { default as ActionStatus } from './ActionStatus'
import type { ColumnType, Selectable, Insertable, Updateable } from 'kysely'

/**
 * Represents the table app.event_actions
 * Stores actions performed on life events, including client-supplied transaction_id for idempotency. Event actions cannot be updated or deleted by the application database user. The same transaction id can only create action of one type. Each action is linked to a specific event.
 */
export default interface EventActionsTable {
  id: ColumnType<UUID, UUID | undefined, UUID>

  actionType: ColumnType<ActionType, ActionType, ActionType>

  annotation: ColumnType<
    Record<string, any> | null,
    Record<string, any> | null,
    Record<string, any> | null
  >

  assignedTo: ColumnType<string | null, string | null, string | null>

  createdAt: ColumnType<string, string | undefined, string>

  createdAtLocation: ColumnType<UUID | null, UUID | null, UUID | null>

  createdBy: ColumnType<string, string, string>

  createdByRole: ColumnType<string, string, string>

  createdBySignature: ColumnType<string | null, string | null, string | null>

  createdByUserType: ColumnType<UserType, UserType, UserType>

  declaration: ColumnType<
    Record<string, any>,
    Record<string, any> | undefined,
    Record<string, any>
  >

  eventId: ColumnType<UUID, UUID, UUID>

  /** References the original action if this is an asynchronous confirmation of it. */
  originalActionId: ColumnType<UUID | null, UUID | null, UUID | null>

  reasonIsDuplicate: ColumnType<boolean | null, boolean | null, boolean | null>

  reasonMessage: ColumnType<string | null, string | null, string | null>

  registrationNumber: ColumnType<string | null, string | null, string | null>

  requestId: ColumnType<string | null, string | null, string | null>

  status: ColumnType<ActionStatus, ActionStatus, ActionStatus>

  transactionId: ColumnType<string, string, string>

  isImmediateCorrection: ColumnType<
    boolean | null,
    boolean | null,
    boolean | null
  >
}

export type EventActions = Selectable<EventActionsTable>

export type NewEventActions = Insertable<EventActionsTable>

export type EventActionsUpdate = Updateable<EventActionsTable>
