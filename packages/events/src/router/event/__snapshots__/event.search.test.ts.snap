// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Returns events based on the updatedAt column 1`] = `
{
  "createdAt": "[sanitized]",
  "createdAtLocation": "[sanitized]",
  "createdBy": "[sanitized]",
  "createdBySignature": "/random-bucket/47f6b2e2-e69e-4401-92d8-35617de8137b.png",
  "createdByUserType": "[sanitized]",
  "dateOfEvent": "[sanitized]",
  "declaration": {
    "applicant.age": 19,
    "applicant.dobUnknown": true,
    "applicant.email": "test@opencrvs.org",
    "applicant.image": {
      "filename": "4f095fc4-4312-4de2-aa38-86dcc0f71044.png",
      "originalFilename": "abcd.png",
      "type": "image/png",
    },
    "applicant.name": {
      "firstname": "Sara",
      "surname": "Sarajanen",
    },
    "recommender.none": true,
  },
  "flags": [],
  "id": "[sanitized]",
  "legalStatuses": {
    "DECLARED": {
      "acceptedAt": "[sanitized]",
      "createdAt": "[sanitized]",
      "createdAtLocation": "[sanitized]",
      "createdBy": "[sanitized]",
      "createdByRole": "REGISTRATION_AGENT",
      "createdBySignature": "/random-bucket/47f6b2e2-e69e-4401-92d8-35617de8137b.png",
      "createdByUserType": "[sanitized]",
    },
  },
  "status": "DECLARED",
  "trackingId": "[sanitized]",
  "type": "tennis-club-membership",
  "updatedAt": "[sanitized]",
  "updatedAtLocation": "[sanitized]",
  "updatedBy": "[sanitized]",
  "updatedByUserRole": "REGISTRATION_AGENT",
}
`;

exports[`Returns events based on the updatedAt column 2`] = `
{
  "createdAt": "[sanitized]",
  "createdAtLocation": "[sanitized]",
  "createdBy": "[sanitized]",
  "createdBySignature": "/random-bucket/47f6b2e2-e69e-4401-92d8-35617de8137b.png",
  "createdByUserType": "[sanitized]",
  "dateOfEvent": "[sanitized]",
  "declaration": {
    "applicant.age": 19,
    "applicant.dobUnknown": true,
    "applicant.email": "test@opencrvs.org",
    "applicant.image": {
      "filename": "4f095fc4-4312-4de2-aa38-86dcc0f71044.png",
      "originalFilename": "abcd.png",
      "type": "image/png",
    },
    "applicant.name": {
      "firstname": "Sarachella",
      "surname": "Smith",
    },
    "recommender.none": true,
  },
  "flags": [],
  "id": "[sanitized]",
  "legalStatuses": {
    "DECLARED": {
      "acceptedAt": "[sanitized]",
      "createdAt": "[sanitized]",
      "createdAtLocation": "[sanitized]",
      "createdBy": "[sanitized]",
      "createdByRole": "REGISTRATION_AGENT",
      "createdBySignature": "/random-bucket/47f6b2e2-e69e-4401-92d8-35617de8137b.png",
      "createdByUserType": "[sanitized]",
    },
  },
  "status": "DECLARED",
  "trackingId": "[sanitized]",
  "type": "tennis-club-membership",
  "updatedAt": "[sanitized]",
  "updatedAtLocation": "[sanitized]",
  "updatedBy": "[sanitized]",
  "updatedByUserRole": "REGISTRATION_AGENT",
}
`;

exports[`Returns relevant events in right order 1`] = `
{
  "assignedTo": "[sanitized]",
  "createdAt": "[sanitized]",
  "createdAtLocation": "[sanitized]",
  "createdBy": "[sanitized]",
  "createdBySignature": "/random-bucket/f47b27b0-23bd-415f-b7ab-d6fd15534b09.png",
  "createdByUserType": "[sanitized]",
  "dateOfEvent": "[sanitized]",
  "declaration": {
    "applicant.age": 19,
    "applicant.dobUnknown": true,
    "applicant.email": "test@opencrvs.org",
    "applicant.image": {
      "filename": "4f095fc4-4312-4de2-aa38-86dcc0f71044.png",
      "originalFilename": "abcd.png",
      "type": "image/png",
    },
    "applicant.name": {
      "firstname": "Chris",
      "surname": "Sarthua",
    },
    "recommender.none": true,
  },
  "flags": [],
  "id": "[sanitized]",
  "legalStatuses": {
    "DECLARED": {
      "acceptedAt": "[sanitized]",
      "createdAt": "[sanitized]",
      "createdAtLocation": "[sanitized]",
      "createdBy": "[sanitized]",
      "createdByRole": "REGISTRATION_AGENT",
      "createdBySignature": "/random-bucket/f47b27b0-23bd-415f-b7ab-d6fd15534b09.png",
      "createdByUserType": "[sanitized]",
    },
  },
  "status": "DECLARED",
  "trackingId": "[sanitized]",
  "type": "tennis-club-membership",
  "updatedAt": "[sanitized]",
  "updatedAtLocation": "[sanitized]",
  "updatedBy": "[sanitized]",
  "updatedByUserRole": "REGISTRATION_AGENT",
}
`;

exports[`Returns relevant events in right order 2`] = `
{
  "assignedTo": "[sanitized]",
  "createdAt": "[sanitized]",
  "createdAtLocation": "[sanitized]",
  "createdBy": "[sanitized]",
  "createdBySignature": "/random-bucket/f47b27b0-23bd-415f-b7ab-d6fd15534b09.png",
  "createdByUserType": "[sanitized]",
  "dateOfEvent": "[sanitized]",
  "declaration": {
    "applicant.age": 19,
    "applicant.dobUnknown": true,
    "applicant.email": "test@opencrvs.org",
    "applicant.image": {
      "filename": "4f095fc4-4312-4de2-aa38-86dcc0f71044.png",
      "originalFilename": "abcd.png",
      "type": "image/png",
    },
    "applicant.name": {
      "firstname": "John",
      "surname": "Brown",
    },
    "recommender.none": true,
  },
  "flags": [],
  "id": "[sanitized]",
  "legalStatuses": {
    "DECLARED": {
      "acceptedAt": "[sanitized]",
      "createdAt": "[sanitized]",
      "createdAtLocation": "[sanitized]",
      "createdBy": "[sanitized]",
      "createdByRole": "REGISTRATION_AGENT",
      "createdBySignature": "/random-bucket/f47b27b0-23bd-415f-b7ab-d6fd15534b09.png",
      "createdByUserType": "[sanitized]",
    },
    "REGISTERED": {
      "acceptedAt": "[sanitized]",
      "createdAt": "[sanitized]",
      "createdAtLocation": "[sanitized]",
      "createdBy": "[sanitized]",
      "createdByRole": "REGISTRATION_AGENT",
      "createdBySignature": "/random-bucket/f47b27b0-23bd-415f-b7ab-d6fd15534b09.png",
      "createdByUserType": "[sanitized]",
      "registrationNumber": "[sanitized]",
    },
  },
  "status": "REGISTERED",
  "trackingId": "[sanitized]",
  "type": "tennis-club-membership",
  "updatedAt": "[sanitized]",
  "updatedAtLocation": "[sanitized]",
  "updatedBy": "[sanitized]",
  "updatedByUserRole": "REGISTRATION_AGENT",
}
`;

exports[`Throws when date field is invalid 1`] = `
[TRPCError: [
  {
    "code": "invalid_union",
    "errors": [
      [
        {
          "code": "invalid_union",
          "errors": [
            [
              {
                "origin": "string",
                "code": "invalid_format",
                "format": "date",
                "pattern": "/^(?:(?:\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\\\d|30)|(?:02)-(?:0[1-9]|1\\\\d|2[0-8])))$/",
                "path": [],
                "message": "Invalid ISO date"
              }
            ],
            [
              {
                "origin": "string",
                "code": "invalid_format",
                "format": "datetime",
                "pattern": "/^(?:(?:\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\\\d|30)|(?:02)-(?:0[1-9]|1\\\\d|2[0-8])))T(?:(?:[01]\\\\d|2[0-3]):[0-5]\\\\d(?::[0-5]\\\\d(?:\\\\.\\\\d+)?)?(?:Z))$/",
                "path": [],
                "message": "Invalid ISO datetime"
              }
            ]
          ],
          "path": [
            "term"
          ],
          "message": "Invalid input"
        }
      ],
      [
        {
          "code": "invalid_value",
          "values": [
            "range"
          ],
          "path": [
            "type"
          ],
          "message": "Invalid input: expected \\"range\\""
        },
        {
          "code": "invalid_union",
          "errors": [
            [
              {
                "expected": "string",
                "code": "invalid_type",
                "path": [],
                "message": "Invalid input: expected string, received undefined"
              }
            ],
            [
              {
                "expected": "string",
                "code": "invalid_type",
                "path": [],
                "message": "Invalid input: expected string, received undefined"
              }
            ]
          ],
          "path": [
            "gte"
          ],
          "message": "Invalid input"
        },
        {
          "code": "invalid_union",
          "errors": [
            [
              {
                "expected": "string",
                "code": "invalid_type",
                "path": [],
                "message": "Invalid input: expected string, received undefined"
              }
            ],
            [
              {
                "expected": "string",
                "code": "invalid_type",
                "path": [],
                "message": "Invalid input: expected string, received undefined"
              }
            ]
          ],
          "path": [
            "lte"
          ],
          "message": "Invalid input"
        }
      ]
    ],
    "path": [
      "clauses",
      0,
      "updatedAt"
    ],
    "message": "Invalid input"
  }
]]
`;

exports[`Throws when one of the date range fields has invalid date 1`] = `
[TRPCError: [
  {
    "code": "invalid_union",
    "errors": [
      [
        {
          "code": "invalid_value",
          "values": [
            "exact"
          ],
          "path": [
            "type"
          ],
          "message": "Invalid input: expected \\"exact\\""
        },
        {
          "code": "invalid_union",
          "errors": [
            [
              {
                "expected": "string",
                "code": "invalid_type",
                "path": [],
                "message": "Invalid input: expected string, received undefined"
              }
            ],
            [
              {
                "expected": "string",
                "code": "invalid_type",
                "path": [],
                "message": "Invalid input: expected string, received undefined"
              }
            ]
          ],
          "path": [
            "term"
          ],
          "message": "Invalid input"
        }
      ],
      [
        {
          "code": "invalid_union",
          "errors": [
            [
              {
                "origin": "string",
                "code": "invalid_format",
                "format": "date",
                "pattern": "/^(?:(?:\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\\\d|30)|(?:02)-(?:0[1-9]|1\\\\d|2[0-8])))$/",
                "path": [],
                "message": "Invalid ISO date"
              }
            ],
            [
              {
                "origin": "string",
                "code": "invalid_format",
                "format": "datetime",
                "pattern": "/^(?:(?:\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\\\d|30)|(?:02)-(?:0[1-9]|1\\\\d|2[0-8])))T(?:(?:[01]\\\\d|2[0-3]):[0-5]\\\\d(?::[0-5]\\\\d(?:\\\\.\\\\d+)?)?(?:Z))$/",
                "path": [],
                "message": "Invalid ISO datetime"
              }
            ]
          ],
          "path": [
            "gte"
          ],
          "message": "Invalid input"
        }
      ]
    ],
    "path": [
      "clauses",
      0,
      "updatedAt"
    ],
    "message": "Invalid input"
  }
]]
`;

exports[`Throws when searching by unrelated properties 1`] = `
[TRPCError: [
  {
    "code": "custom",
    "path": [
      "clauses",
      0
    ],
    "message": "At least one query field must be specified."
  }
]]
`;

exports[`Throws when searching with empty clauses 1`] = `
[TRPCError: [
  {
    "origin": "array",
    "code": "too_small",
    "minimum": 1,
    "inclusive": true,
    "path": [
      "clauses"
    ],
    "message": "At least one clause is required."
  }
]]
`;

exports[`Throws when searching without payload 1`] = `
[TRPCError: [
  {
    "code": "invalid_union",
    "errors": [
      [
        {
          "code": "invalid_value",
          "values": [
            "and"
          ],
          "path": [],
          "message": "Invalid input: expected \\"and\\""
        }
      ],
      [
        {
          "code": "invalid_value",
          "values": [
            "or"
          ],
          "path": [],
          "message": "Invalid input: expected \\"or\\""
        }
      ]
    ],
    "path": [
      "type"
    ],
    "message": "Invalid input"
  },
  {
    "expected": "array",
    "code": "invalid_type",
    "path": [
      "clauses"
    ],
    "message": "Invalid input: expected array, received undefined"
  }
]]
`;

exports[`User only sees tennis club membership events within their jurisdiction 1`] = `
[
  {
    "assignedTo": "[sanitized]",
    "createdAt": "[sanitized]",
    "createdAtLocation": "[sanitized]",
    "createdBy": "[sanitized]",
    "createdBySignature": "/random-bucket/9792814a-6e22-4847-b5a2-1ab24bf887c6.png",
    "createdByUserType": "[sanitized]",
    "dateOfEvent": "[sanitized]",
    "declaration": {},
    "flags": [],
    "id": "[sanitized]",
    "legalStatuses": {},
    "status": "CREATED",
    "trackingId": "[sanitized]",
    "type": "tennis-club-membership",
    "updatedAt": "[sanitized]",
    "updatedAtLocation": "[sanitized]",
    "updatedBy": "[sanitized]",
    "updatedByUserRole": "REGISTRATION_AGENT",
  },
  {
    "assignedTo": "[sanitized]",
    "createdAt": "[sanitized]",
    "createdAtLocation": "[sanitized]",
    "createdBy": "[sanitized]",
    "createdBySignature": "/random-bucket/9792814a-6e22-4847-b5a2-1ab24bf887c6.png",
    "createdByUserType": "[sanitized]",
    "dateOfEvent": "[sanitized]",
    "declaration": {},
    "flags": [],
    "id": "[sanitized]",
    "legalStatuses": {},
    "status": "CREATED",
    "trackingId": "[sanitized]",
    "type": "tennis-club-membership",
    "updatedAt": "[sanitized]",
    "updatedAtLocation": "[sanitized]",
    "updatedBy": "[sanitized]",
    "updatedByUserRole": "REGISTRATION_AGENT",
  },
]
`;

exports[`User only sees tennis club membership events within their jurisdiction 2`] = `
[
  {
    "assignedTo": "[sanitized]",
    "createdAt": "[sanitized]",
    "createdAtLocation": "[sanitized]",
    "createdBy": "[sanitized]",
    "createdBySignature": "/random-bucket/9792814a-6e22-4847-b5a2-1ab24bf887c6.png",
    "createdByUserType": "[sanitized]",
    "dateOfEvent": "[sanitized]",
    "declaration": {},
    "flags": [],
    "id": "[sanitized]",
    "legalStatuses": {},
    "status": "CREATED",
    "trackingId": "[sanitized]",
    "type": "tennis-club-membership",
    "updatedAt": "[sanitized]",
    "updatedAtLocation": "[sanitized]",
    "updatedBy": "[sanitized]",
    "updatedByUserRole": "REGISTRATION_AGENT",
  },
  {
    "assignedTo": "[sanitized]",
    "createdAt": "[sanitized]",
    "createdAtLocation": "[sanitized]",
    "createdBy": "[sanitized]",
    "createdBySignature": "/random-bucket/9792814a-6e22-4847-b5a2-1ab24bf887c6.png",
    "createdByUserType": "[sanitized]",
    "dateOfEvent": "[sanitized]",
    "declaration": {},
    "flags": [],
    "id": "[sanitized]",
    "legalStatuses": {},
    "status": "CREATED",
    "trackingId": "[sanitized]",
    "type": "tennis-club-membership",
    "updatedAt": "[sanitized]",
    "updatedAtLocation": "[sanitized]",
    "updatedBy": "[sanitized]",
    "updatedByUserRole": "REGISTRATION_AGENT",
  },
  {
    "assignedTo": "[sanitized]",
    "createdAt": "[sanitized]",
    "createdAtLocation": "[sanitized]",
    "createdBy": "[sanitized]",
    "createdBySignature": "/random-bucket/9792814a-6e22-4847-b5a2-1ab24bf887c6.png",
    "createdByUserType": "[sanitized]",
    "dateOfEvent": "[sanitized]",
    "declaration": {},
    "flags": [],
    "id": "[sanitized]",
    "legalStatuses": {},
    "status": "CREATED",
    "trackingId": "[sanitized]",
    "type": "tennis-club-membership",
    "updatedAt": "[sanitized]",
    "updatedAtLocation": "[sanitized]",
    "updatedBy": "[sanitized]",
    "updatedByUserRole": "REGISTRATION_AGENT",
  },
]
`;

exports[`User with my-jurisdiction scope can see events from other offices based on their scopes 1`] = `
{
  "assignedTo": "[sanitized]",
  "createdAt": "[sanitized]",
  "createdAtLocation": "[sanitized]",
  "createdBy": "[sanitized]",
  "createdBySignature": "/random-bucket/9dcede43-d8f5-4b9e-b391-ecc7cde52c75.png",
  "createdByUserType": "[sanitized]",
  "dateOfEvent": "[sanitized]",
  "declaration": {},
  "flags": [],
  "id": "[sanitized]",
  "legalStatuses": {},
  "status": "CREATED",
  "trackingId": "[sanitized]",
  "type": "tennis-club-membership",
  "updatedAt": "[sanitized]",
  "updatedAtLocation": "[sanitized]",
  "updatedBy": "[sanitized]",
  "updatedByUserRole": "REGISTRATION_AGENT",
}
`;

exports[`User with my-jurisdiction scope only sees events from their primary office 1`] = `
{
  "assignedTo": "[sanitized]",
  "createdAt": "[sanitized]",
  "createdAtLocation": "[sanitized]",
  "createdBy": "[sanitized]",
  "createdBySignature": "/random-bucket/6dcc4bb0-4ee4-46e2-a58d-4d22985dfda4.png",
  "createdByUserType": "[sanitized]",
  "dateOfEvent": "[sanitized]",
  "declaration": {},
  "flags": [],
  "id": "[sanitized]",
  "legalStatuses": {},
  "status": "CREATED",
  "trackingId": "[sanitized]",
  "type": "tennis-club-membership",
  "updatedAt": "[sanitized]",
  "updatedAtLocation": "[sanitized]",
  "updatedBy": "[sanitized]",
  "updatedByUserRole": "REGISTRATION_AGENT",
}
`;
