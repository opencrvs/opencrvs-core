// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`event.actions.notify > NOTIFY action does not fail even if invalid value is sent 1`] = `
{
  "actions": [
    {
      "createdAt": "2025-08-06T14:43:39.691Z",
      "createdAtLocation": "2ffacfca-8ac0-477e-807f-149a99b58698",
      "createdBy": "bb437e89-9bc2-4d3e-9dc0-72c96e20681b",
      "createdByRole": "REGISTRATION_AGENT",
      "createdBySignature": "/random-bucket/47f6b2e2-e69e-4401-92d8-35617de8137b.png",
      "createdByUserType": "user",
      "declaration": {},
      "id": "3c737f2d-80f2-4ea3-8b99-6dd6e4ea1e70",
      "status": "Accepted",
      "transactionId": "a0889027-71b1-43c1-bc39-131e25ff4e68",
      "type": "CREATE",
    },
    {
      "assignedTo": "bb437e89-9bc2-4d3e-9dc0-72c96e20681b",
      "createdAt": "2025-08-06T14:43:39.691Z",
      "createdAtLocation": "2ffacfca-8ac0-477e-807f-149a99b58698",
      "createdBy": "bb437e89-9bc2-4d3e-9dc0-72c96e20681b",
      "createdByRole": "REGISTRATION_AGENT",
      "createdBySignature": "/random-bucket/47f6b2e2-e69e-4401-92d8-35617de8137b.png",
      "createdByUserType": "user",
      "declaration": {},
      "id": "8eeff8b7-656c-4d8a-91c8-2fbc5194e457",
      "status": "Accepted",
      "transactionId": "a0889027-71b1-43c1-bc39-131e25ff4e68",
      "type": "ASSIGN",
    },
    {
      "createdAt": "2025-08-06T14:43:39.794Z",
      "createdAtLocation": "2ffacfca-8ac0-477e-807f-149a99b58698",
      "createdBy": "bb437e89-9bc2-4d3e-9dc0-72c96e20681b",
      "createdByRole": "REGISTRATION_AGENT",
      "createdBySignature": "/random-bucket/47f6b2e2-e69e-4401-92d8-35617de8137b.png",
      "createdByUserType": "user",
      "declaration": {
        "applicant.dob": "2050-01-01",
      },
      "id": "5a0bcbc8-1942-4abe-b92a-022067cd08ad",
      "status": "Accepted",
      "transactionId": "66faf71b-b5ad-45ee-b8cb-fd4a3fbe5bc5",
      "type": "NOTIFY",
    },
    {
      "createdAt": "2025-08-06T14:43:39.800Z",
      "createdAtLocation": "2ffacfca-8ac0-477e-807f-149a99b58698",
      "createdBy": "bb437e89-9bc2-4d3e-9dc0-72c96e20681b",
      "createdByRole": "REGISTRATION_AGENT",
      "createdBySignature": "/random-bucket/47f6b2e2-e69e-4401-92d8-35617de8137b.png",
      "createdByUserType": "user",
      "declaration": {},
      "id": "8be63269-5800-4609-8611-f320d76ef9c1",
      "status": "Accepted",
      "transactionId": "66faf71b-b5ad-45ee-b8cb-fd4a3fbe5bc5",
      "type": "UNASSIGN",
    },
  ],
  "createdAt": "2025-08-06T14:43:39.691Z",
  "id": "2b73c987-c7d8-4373-a11f-df848c76082e",
  "trackingId": "4OLAHW",
  "type": "tennis-club-membership",
  "updatedAt": "2025-08-06T14:43:39.691Z",
}
`;

exports[`event.actions.notify > NOTIFY action fails if invalid value is sent 1`] = `[TRPCError: [{"message":"Please enter a valid date","id":"applicant.dob","value":"2050-01-01"}]]`;

exports[`event.actions.notify > NOTIFY action fails if payload includes field that is not in the declaration 1`] = `[TRPCError: [{"message":"Unexpected field","id":"foo.bar","value":"hello"}]]`;

exports[`event.actions.notify > NOTIFY action fails if payload includes field with unexpected type 1`] = `
[TRPCError: [
  {
    "code": "invalid_union",
    "unionErrors": [
      {
        "issues": [
          {
            "code": "invalid_type",
            "expected": "string",
            "received": "object",
            "path": [
              "declaration",
              "applicant.name"
            ],
            "message": "Expected string, received object"
          }
        ],
        "name": "ZodError"
      },
      {
        "issues": [
          {
            "code": "invalid_type",
            "expected": "string",
            "received": "object",
            "path": [
              "declaration",
              "applicant.name"
            ],
            "message": "Expected string, received object"
          }
        ],
        "name": "ZodError"
      },
      {
        "issues": [
          {
            "code": "invalid_union",
            "unionErrors": [
              {
                "issues": [
                  {
                    "code": "invalid_type",
                    "expected": "string",
                    "received": "undefined",
                    "path": [
                      "declaration",
                      "applicant.name",
                      "start"
                    ],
                    "message": "Required"
                  },
                  {
                    "code": "invalid_type",
                    "expected": "string",
                    "received": "undefined",
                    "path": [
                      "declaration",
                      "applicant.name",
                      "end"
                    ],
                    "message": "Required"
                  }
                ],
                "name": "ZodError"
              },
              {
                "issues": [
                  {
                    "code": "invalid_type",
                    "expected": "string",
                    "received": "object",
                    "path": [
                      "declaration",
                      "applicant.name"
                    ],
                    "message": "Expected string, received object"
                  }
                ],
                "name": "ZodError"
              }
            ],
            "path": [
              "declaration",
              "applicant.name"
            ],
            "message": "Invalid input"
          }
        ],
        "name": "ZodError"
      },
      {
        "issues": [
          {
            "expected": "'last7Days' | 'last30Days' | 'last90Days' | 'last365Days'",
            "received": "object",
            "code": "invalid_type",
            "path": [
              "declaration",
              "applicant.name"
            ],
            "message": "Expected 'last7Days' | 'last30Days' | 'last90Days' | 'last365Days', received object"
          }
        ],
        "name": "ZodError"
      },
      {
        "issues": [
          {
            "code": "invalid_type",
            "expected": "boolean",
            "received": "object",
            "path": [
              "declaration",
              "applicant.name"
            ],
            "message": "Expected boolean, received object"
          }
        ],
        "name": "ZodError"
      },
      {
        "issues": [
          {
            "code": "invalid_type",
            "expected": "number",
            "received": "object",
            "path": [
              "declaration",
              "applicant.name"
            ],
            "message": "Expected number, received object"
          }
        ],
        "name": "ZodError"
      },
      {
        "issues": [
          {
            "code": "invalid_type",
            "expected": "string",
            "received": "undefined",
            "path": [
              "declaration",
              "applicant.name",
              "path"
            ],
            "message": "Required"
          },
          {
            "code": "invalid_type",
            "expected": "string",
            "received": "undefined",
            "path": [
              "declaration",
              "applicant.name",
              "originalFilename"
            ],
            "message": "Required"
          },
          {
            "code": "invalid_type",
            "expected": "string",
            "received": "undefined",
            "path": [
              "declaration",
              "applicant.name",
              "type"
            ],
            "message": "Required"
          }
        ],
        "name": "ZodError"
      },
      {
        "issues": [
          {
            "code": "invalid_type",
            "expected": "array",
            "received": "object",
            "path": [
              "declaration",
              "applicant.name"
            ],
            "message": "Expected array, received object"
          }
        ],
        "name": "ZodError"
      },
      {
        "issues": [
          {
            "code": "invalid_type",
            "expected": "string",
            "received": "undefined",
            "path": [
              "declaration",
              "applicant.name",
              "country"
            ],
            "message": "Required"
          },
          {
            "code": "invalid_literal",
            "expected": "DOMESTIC",
            "path": [
              "declaration",
              "applicant.name",
              "addressType"
            ],
            "message": "Invalid literal value, expected \\"DOMESTIC\\""
          },
          {
            "code": "invalid_type",
            "expected": "string",
            "received": "undefined",
            "path": [
              "declaration",
              "applicant.name",
              "province"
            ],
            "message": "Required"
          },
          {
            "code": "invalid_type",
            "expected": "string",
            "received": "undefined",
            "path": [
              "declaration",
              "applicant.name",
              "district"
            ],
            "message": "Required"
          },
          {
            "code": "invalid_literal",
            "expected": "URBAN",
            "path": [
              "declaration",
              "applicant.name",
              "urbanOrRural"
            ],
            "message": "Invalid literal value, expected \\"URBAN\\""
          }
        ],
        "name": "ZodError"
      },
      {
        "issues": [
          {
            "code": "invalid_type",
            "expected": "string",
            "received": "undefined",
            "path": [
              "declaration",
              "applicant.name",
              "country"
            ],
            "message": "Required"
          },
          {
            "code": "invalid_literal",
            "expected": "DOMESTIC",
            "path": [
              "declaration",
              "applicant.name",
              "addressType"
            ],
            "message": "Invalid literal value, expected \\"DOMESTIC\\""
          },
          {
            "code": "invalid_type",
            "expected": "string",
            "received": "undefined",
            "path": [
              "declaration",
              "applicant.name",
              "province"
            ],
            "message": "Required"
          },
          {
            "code": "invalid_type",
            "expected": "string",
            "received": "undefined",
            "path": [
              "declaration",
              "applicant.name",
              "district"
            ],
            "message": "Required"
          },
          {
            "code": "invalid_literal",
            "expected": "RURAL",
            "path": [
              "declaration",
              "applicant.name",
              "urbanOrRural"
            ],
            "message": "Invalid literal value, expected \\"RURAL\\""
          }
        ],
        "name": "ZodError"
      },
      {
        "issues": [
          {
            "code": "invalid_type",
            "expected": "undefined",
            "received": "object",
            "path": [
              "declaration",
              "applicant.name"
            ],
            "message": "Expected undefined, received object"
          }
        ],
        "name": "ZodError"
      },
      {
        "issues": [
          {
            "code": "invalid_type",
            "expected": "string",
            "received": "undefined",
            "path": [
              "declaration",
              "applicant.name",
              "country"
            ],
            "message": "Required"
          },
          {
            "code": "invalid_literal",
            "expected": "INTERNATIONAL",
            "path": [
              "declaration",
              "applicant.name",
              "addressType"
            ],
            "message": "Invalid literal value, expected \\"INTERNATIONAL\\""
          },
          {
            "code": "invalid_type",
            "expected": "string",
            "received": "undefined",
            "path": [
              "declaration",
              "applicant.name",
              "state"
            ],
            "message": "Required"
          },
          {
            "code": "invalid_type",
            "expected": "string",
            "received": "undefined",
            "path": [
              "declaration",
              "applicant.name",
              "district2"
            ],
            "message": "Required"
          }
        ],
        "name": "ZodError"
      },
      {
        "issues": [
          {
            "code": "invalid_union",
            "unionErrors": [
              {
                "issues": [
                  {
                    "code": "invalid_union",
                    "unionErrors": [
                      {
                        "issues": [
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "number",
                            "path": [
                              "declaration",
                              "applicant.name",
                              "firstname"
                            ],
                            "message": "Expected string, received number"
                          }
                        ],
                        "name": "ZodError"
                      },
                      {
                        "issues": [
                          {
                            "code": "invalid_type",
                            "expected": "null",
                            "received": "object",
                            "path": [
                              "declaration",
                              "applicant.name"
                            ],
                            "message": "Expected null, received object"
                          }
                        ],
                        "name": "ZodError"
                      }
                    ],
                    "path": [
                      "declaration",
                      "applicant.name"
                    ],
                    "message": "Invalid input"
                  }
                ],
                "name": "ZodError"
              },
              {
                "issues": [
                  {
                    "code": "invalid_type",
                    "expected": "undefined",
                    "received": "object",
                    "path": [
                      "declaration",
                      "applicant.name"
                    ],
                    "message": "Expected undefined, received object"
                  }
                ],
                "name": "ZodError"
              }
            ],
            "path": [
              "declaration",
              "applicant.name"
            ],
            "message": "Invalid input"
          }
        ],
        "name": "ZodError"
      }
    ],
    "path": [
      "declaration",
      "applicant.name"
    ],
    "message": "Invalid input"
  }
]]
`;

exports[`event.actions.notify > allows sending partial payload as NOTIFY action 1`] = `
{
  "applicant.dob": "2025-05-16",
  "applicant.firstname": "John",
}
`;

exports[`event.actions.notify > system user > system user should not be able to perform action on assigned event 1`] = `[TRPCError: System user can not perform action on assigned event]`;
