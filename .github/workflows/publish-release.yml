# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.
#
# OpenCRVS is also distributed under the terms of the Civil Registration
# & Healthcare Disclaimer located at http://opencrvs.org/license.
#
# Copyright (C) The OpenCRVS Authors located at https://github.com/opencrvs/opencrvs-core/blob/master/AUTHORS.
name: Publish release

on:
  workflow_dispatch:
    inputs:
      # release_version:
      #   This input parameter specifies the release version number for the workflow.
      #   Value is used to checkout the correct branch or tag
      release_version:
        description: Release version number
        required: true

jobs:
  base:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        if: github.event_name == 'workflow_dispatch'
        with:
          ref: '${{ github.event.inputs.release_version }}'

      - uses: actions/checkout@v4
        if: github.event_name == 'push'

      - name: Set version and branch
        id: set-version-and-branch
        run: |
          export VERSION=${{ github.event.inputs.release_version }}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          export BRANCH=${{ github.event.inputs.release_version }}
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

      - name: Get list of services
        id: get-services
        run: |
          services=$(grep "^  [^ ]" docker-compose.yml | grep -v base| grep -v '#' | awk -F: '{print $1}' | sed -e 's/^ *//')
          services_json=$(echo $services | tr '\n' ',' | sed 's/,$//' | jq -R 'split(" ")' | tr -d '\n')
          # Set the list of service names as an output variable
          echo "services=$services_json" >> $GITHUB_OUTPUT
          echo "services=$services_json"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PUBLISH_TOKEN }}

      - name: Build and push base image
        uses: docker/build-push-action@v6
        with:
          file: packages/Dockerfile.base
          context: .
          push: true
          tags: |
            ghcr.io/opencrvs/ocrvs-base:${{ steps.set-version-and-branch.outputs.version }}
          cache-from: type=registry,ref=ghcr.io/opencrvs/ocrvs-base:${{ steps.set-version-and-branch.outputs.version }}
          cache-to: type=inline

    outputs:
      services: ${{ steps.get-services.outputs.services }}
      version: ${{ steps.set-version-and-branch.outputs.version }}
      branch: ${{ steps.set-version-and-branch.outputs.branch }}

  build:
    needs: base
    strategy:
      fail-fast: false
      matrix:
        service: ${{ fromJSON(needs.base.outputs.services) }}
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        if: github.event_name == 'workflow_dispatch'
        with:
          ref: '${{ github.event.inputs.release_version }}'

      - uses: actions/checkout@v4
        if: github.event_name == 'push'

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PUBLISH_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          file: packages/${{ matrix.service }}/Dockerfile
          build-args: |
            VERSION=${{ needs.base.outputs.version }}
            BRANCH=${{ needs.base.outputs.branch }}
          push: true
          context: .
          tags: |
            ghcr.io/opencrvs/ocrvs-${{ matrix.service }}:${{ steps.set-version-and-branch.outputs.version }}
          cache-from: type=registry,ref=ghcr.io/opencrvs/ocrvs-${{ matrix.service }}:${{ needs.base.outputs.version}}
          cache-to: type=inline

  security-scans:
    needs: [base, build]
    strategy:
      fail-fast: false
      matrix:
        service: ${{ fromJSON(needs.base.outputs.services) }}
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            trivy.yaml
            .trivyignore.yaml
          sparse-checkout-cone-mode: false
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'ghcr.io/opencrvs/ocrvs-${{ matrix.service }}:${{ needs.base.outputs.version }}'
          trivy-config: trivy.yaml
