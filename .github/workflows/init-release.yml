# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.
#
# OpenCRVS is also distributed under the terms of the Civil Registration
# & Healthcare Disclaimer located at http://opencrvs.org/license.
#
# Copyright (C) The OpenCRVS Authors located at https://github.com/opencrvs/opencrvs-core/blob/master/AUTHORS.
name: Release - Start a new release
run-name: Release - Start a new release ${{ inputs.version }}
on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: true
        description: "Version to release"
  
jobs:
  release_workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Determine the Base Branch
        id: get_base_branch
        run: |
          version="${{ inputs.version }}"

          if [[ ! $version =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version was provided as input: $version" >&2
            echo "Please follow semver format for versioning, e/g 1.7.2"
            exit 1
          fi

          IFS='.' read -r x y z <<< "$version"
          if [ "$z" = "0" ]; then
            base_branch="develop"
          else
            previous_version="$((x)).$((y)).$((z-1))"
            base_branch="release/$previous_version"
          fi
          echo "target_branch=master" >> $GITHUB_OUTPUT
          echo "base_branch=$base_branch" >> $GITHUB_OUTPUT
                 
      - name: Start a new release ${{ inputs.version }} from ${{ steps.get_base_branch.outputs.base_branch }}
        uses: hoangvvo/gitflow-workflow-action@0.3.8
        with:
          develop_branch: ${{ steps.get_base_branch.outputs.base_branch }}
          main_branch: ${{ steps.get_base_branch.outputs.target_branch }}
          merge_back_from_main: false
          version: ${{ inputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger workflow in opencrvs-countryconfig
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: 'opencrvs-countryconfig',
              workflow_id: 'init-release.yml',
              ref: context.ref,
              inputs: {
                version: '${{ inputs.version }}'
              }
            })
      
      - name: Trigger workflow in opencrvs-farajaland
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: 'opencrvs-farajaland',
              workflow_id: 'init-release.yml',
              ref: context.ref,
              inputs: {
                version: '${{ inputs.version }}'
              }
            })

      - name: Checkout the release branch
        uses: actions/checkout@v4
        with:
          ref: "release/${{ inputs.version }}"

      - name: Clear auto-generated PR comment
        run: |
          REPO="${{ github.repository }}"
          PR_BRANCH="release/${{ inputs.version }}"
          PR_NUMBER=$(gh pr list --head "$PR_BRANCH" --repo "$REPO" --json number -q '.[0].number')
          cd "$GITHUB_WORKSPACE"
          if [ -f .github/TEMPLATES/RELEASE_PR_TEMPLATE.md ]; then
            BODY=$(jq -Rs . < .github/TEMPLATES/RELEASE_PR_TEMPLATE.md)
          else
            BODY=$(jq -n --arg body "" '$body')
          fi
          echo "{\"body\": $BODY}" > body.json
          gh api \
            --method PATCH \
            -H "Accept: application/vnd.github.v3+json" \
            /repos/"$REPO"/issues/"$PR_NUMBER" \
            --input body.json 
          rm body.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Update version numbers and CHANGELOG
        run: |
          cd "$GITHUB_WORKSPACE"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          npx lerna exec 'yarn version --new-version ${{ inputs.version }} --no-git-tag-version'
          git add .
          git commit -m "chore: update version to ${{ inputs.version }}"

          sed -i '1,2d' CHANGELOG.md
          cp CHANGELOG.md COPY_CHANGELOG.md
          {
            echo "# Changelog"
            echo ""
            echo "## ${{ inputs.version }} Release Candidate"
            echo ""
            cat COPY_CHANGELOG.md 
          } > CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "docs: update changelog for ${{ inputs.version }} release candidate"
          git push origin "release/${{ inputs.version }}"

      - name: Create a draft release
        run: |
          cd "$GITHUB_WORKSPACE"
          TAG_NAME="v${{ inputs.version }}"
          TITLE="OpenCRVS - $TAG_NAME"
          NOTES="Release notes for version ${{ inputs.version }}"
          git tag "$TAG_NAME"
          git push origin "$TAG_NAME"
          gh release create "$TAG_NAME" \
            --title "$TITLE" \
            --notes "$NOTES" \
            --draft 
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Delete the tag
        run: | 
          TAG_NAME="v${{ inputs.version }}"
          git tag -d "$TAG_NAME"
          git push origin ":refs/tags/$TAG_NAME"
          